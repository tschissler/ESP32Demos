# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  containers:
  - container: platformio
    image: infinitecoding/platformio-for-ci:latest   
    options: -u root    

trigger:
- master

stages:
- stage: Prod
  displayName: Production Stage
  
  jobs:
  - job: Build
    displayName: 'Build Firmware with PlatformIO'
    container: platformio

    pool:
      vmImage: ubuntu-latest

    steps:
    
    - task: ReplaceTokens@1
      displayName: 'Replace IoTHub Connection string in code file'
      inputs:
        sourcePath: 
        filePattern: '*.cpp'
        tokenRegex: '<(\w+)>'
    
    # - task: ReplaceInFilesTextByText@2
    #   inputs:
    #     parameterSearchDirectory: '$(Build.SourcesDirectory)'
    #     parameterSearchText: '<IoTHubConnectionString>'
    #     parameterReplaceText: '$(IoTHubConnectionString)'
    #     parameterTypeOfSearch: 'filesSearchPattern'
    #     parameterFilesPattern: '*.cpp'
    #   displayName: 'Replace IoTHub Connection string in code file'

    - script: platformio run -e esp32dev -d ./08-DeviceTwinUpdate/
      displayName: 'Compile Firmware'
      
    - task: CopyFiles@2
      inputs:
        SourceFolder: $(Build.SourcesDirectory)/08-DeviceTwinUpdate/.pio/build/esp32/
        Contents: '*.bin'
        TargetFolder: $(Build.ArtifactStagingDirectory)
      displayName: "Copy build output files to ArtifactsStagingDirectory"
      
    - task: gitversion/setup@0
      inputs:
        versionSpec: '1.0.x'

    - task: gitversion/execute@0
      inputs:
        targetPath: '$(Build.SourcesDirectory)/08-DeviceTwinUpdate'
    
    - task: PublishBuildArtifacts@1
      inputs:
        ArtifactName: 'Firmware'
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        publishLocation: Container
        TargetPath: $(GitVersion.SemVer)